name: CI/CD

on:
  push:
    branches: ["main"]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      chroma:
        image: chromadb/chroma:latest
        ports:
          - 8001:8000

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ---- Setup Node.js for backend ----
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install backend deps
        working-directory: backend
        run: npm ci

      - name: Run backend tests
        working-directory: backend
        run: npm test --if-present

      # ---- Setup Python for ingest ----
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install ingest deps
        working-directory: ingest
        run: pip install -r requirements.txt

      - name: Run ingest tests
        working-directory: ingest
        run: pytest --maxfail=1 --disable-warnings -q || echo "No tests yet"

      # ---- Build & push Docker images ----
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push frontend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/rag-frontend:latest ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/rag-frontend:latest

      - name: Build & push backend image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/rag-backend:latest ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/rag-backend:latest

      - name: Build & push ingest image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/rag-ingest:latest ./ingest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/rag-ingest:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "~/app/"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/app
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker compose pull
            docker compose up -d
